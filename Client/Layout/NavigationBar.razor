﻿@using Client.Authentication
﻿@using Client.Pages.Shared;

@inject NavigationManager NavManager;
@inject AuthenticationService AuthService;

@implements IDisposable;

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">

        <a class="navbar-brand" @onclick="IdiUKorpu" style="cursor:pointer;">
            <i class="fa fa-cart-shopping text-danger"></i>
            <span class="small text-danger fw-bold">@korpaService.KorpaCount</span>

            <h6>
                Pozdrav,
                <AuthorizeView>
                    <Authorized> @context.User.Identity!.Name</Authorized>
                    <NotAuthorized> Gost</NotAuthorized>
                </AuthorizeView>
            </h6>
        </a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse fw-bold" id="navbarSupportedContent" style="margin-left:25vw">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0" style="font-family:MojFont">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" style="margin-right:20px;" href="#">POCETNA</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link d-flex align-items-center" style="margin-right:20px" ; href=" /proizvodi">PROIZVODI</a>
                </li>

                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Nalog
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown" style="font-family:sans-serif">
                        <AuthorizeView>
                            <Authorized>
                                @if(isAdmin)
                                {
                                    string dodajProizvod = "/dodaj-proizvod";
                                    string dodajKategoriju = "/dodaj-kategoriju";

                                    <li>
                                        <button class="btn btn-secondary" @onclick="() => NavManager.NavigateTo(dodajProizvod)">Dodaj proizvod</button>
                                    </li>
                                    
                                    <li><hr class="dropdown-divider"></li>
                                    
                                    <li>
                                        <button class="btn btn-secondary" @onclick="() => NavManager.NavigateTo(dodajProizvod)">Dodaj kategoriju</button>
                                    </li>

                                    <li><hr class="dropdown-divider"></li>
                                }

                                <li>
                                    <button class="btn btn-danger btn-none " @onclick="OdjavaKorisnika"> <i class="fa fa-lock-open"></i> Odjava</button>
                                </li>
                            </Authorized>

                            <NotAuthorized>
                                @{
                                    string registracija = "registracija-korisnika";
                                    string prijava = "prijava";
                                }

                                <li>
                                    <button class="btn btn-secondary" @onclick="() => Preusmeri(prijava)"> <i class="fa fa-lock"></i> Prijava</button>
                                </li>

                                <li><hr class="dropdown-divider"></li>

                                <li>
                                    <button class="btn btn-secondary" @onclick="() => Preusmeri(registracija)"> <i class="fa fa-sign-in"></i> Registracija</button>
                                </li>
                            </NotAuthorized>
                        </AuthorizeView>
                    </ul>
                </li>
            </ul>

            <!--Klikom na lupicu setuje se PrikaziPretragu na true i prikazuje se polje za unos i skriva se sama lupica-->
            @if (PrikaziPretraguIkona)
            {
                <button @onclick="PretragaKlik" class="btn btn-none">
                    <i class="fa fa-magnifying-glass fs-5" style="cursor:pointer"></i>
                </button>
            }

            @if (PrikaziPretragu)
            {
                <PretragaComponent></PretragaComponent>
            }

        </div>
    </div>
</nav>


@code {
    public bool PrikaziPretragu { get; set; }
    public bool PrikaziPretraguIkona { get; set; } = true;
    private bool isAdmin = false;

    protected async override Task OnInitializedAsync()
    {
        await korpaService.GetKorpaCount();
        korpaService.KorpaAction += StateHasChanged;

        var customAuthenticationService = (CustomAuthenticationStateProvider)AuthStateProvider;
        var authState = await customAuthenticationService.GetAuthenticationStateAsync();
        var korisnik = authState.User;
        isAdmin = korisnik.IsInRole("Admin");

    }

    // metoda koja prikazuje polje za unos teksta za pretragu
    void PretragaKlik()
    {
        PrikaziPretragu = true;
        PrikaziPretraguIkona = !PrikaziPretragu;
    }

    void Preusmeri(string url)
    {
        NavManager.NavigateTo($"nalog/{url}");
    }

    private async Task OdjavaKorisnika()
    {
        var lista = await korpaService.MojeNarudzbine();
        if (lista is not null && lista.Count > 0)
            foreach (var stavka in lista)
                await korpaService.ObrisiProizvodIzKorpe(stavka);

        var customAuthenticationService = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthenticationService.UpdateAuthenticationState(null);
        NavManager.NavigateTo("/", forceLoad: true);
    }

    void IdiUKorpu()
    {
        NavManager.NavigateTo("/korpa/moja-korpa");
    }

    public void Dispose()
    {
        korpaService.KorpaAction -= StateHasChanged;
    }
}