@page "/nalog/prijava"

@using Client.Authentication
@using Microsoft.AspNetCore.Components.Authorization

@implements IDisposable;
@inject NavigationManager NavManager;


                <EditForm Enhance Model="korisnik" OnValidSubmit="UpravljajPrijavom">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
					<section class="ftco-section">
					<div class="container">
						<div class="row justify-content-center">
						</div>
						<div class="row justify-content-center">
							<div class="col-md-12 col-lg-10">
								<div class="wrap d-md-flex">
									<div class="text-wrap p-4 p-lg-5 text-center d-flex align-items-center order-md-last">
										<div class="text w-100">
											<h2>Nemate nalog?</h2>
											<a href="/nalog/registracija-korisnika" class="btn btn-white btn-outline-white">Registruj se</a>
										</div>
									</div>
									<div class="login-wrap p-4 p-lg-5">
			      						<div class="d-flex">
			      							<div class="w-100">
			      								<h3 class="mb-4">Prijava</h3>
			      							</div>
			      						</div>
			      						<div class="form-group mb-3">
			      							<label class="label" for="name">Email</label>
			      							<input type="text" @bind="korisnik.Email" class="form-control" placeholder="Email adresa"/>
			      						</div>
										<div class="form-group mb-3">
		            						<label class="label" for="password">Lozinka</label>
											<input type="password" @bind="korisnik.Lozinka" class="form-control" placeholder="Lozinka" />
										</div>
										<div class="form-group">
											@if (messageDialogService.PrikaziDugmeSacuvaj)
											{
												<button type="submit" class="form-control btn btn-primary submit px-3">Prijavi se</button>
											}
		            						
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</section>
            </EditForm>
            
    <!--prikazivanje poruke-->
    <MessageDialog @ref="messageDialogService.messageDialog"></MessageDialog>



@code {
    PrijavaDTO korisnik = new();

    protected override void OnInitialized()
    {
        messageDialogService.Action += StateHasChanged;
    }

    async Task UpravljajPrijavom()
    {
        messageDialogService.PrikaziDugmeSacuvaj = false;
        messageDialogService.PrikaziBusyDugme = !messageDialogService.PrikaziDugmeSacuvaj;

        var rezultat = await nalogService.Prijava(korisnik);

        if(rezultat.Flag)
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new TokenProp() { Token = rezultat.Token, RefreshToken = rezultat.RefreshToken });
           // messageDialogService.messageDialog!.SetDialogValues("success", rezultat.Poruka);
            NavManager.NavigateTo("/", forceLoad: true);
        }

        else
        {
            messageDialogService.messageDialog!.SetDialogValues("danger", rezultat.Poruka);
            korisnik = new();
        }

        messageDialogService.SetMessageDialog();

        // signalizacija da je metoda zavrsena
        return;
        
    }

    public void Dispose()
    {
        messageDialogService.Action -= StateHasChanged;
    }
}
