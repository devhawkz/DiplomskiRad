@page "/korpa/moja-korpa"
@using Client.Pages.ProizvodPages
@inject NavigationManager NavManager
@implements IDisposable

<AuthorizeView>
    <Authorized>
        @if (korpaService.isKorpaLoaderVidljiv)
        {
            <LoadingPage />
        }
        else
        {
            @if (MojaKorpaNarudzbine is not null && MojaKorpaNarudzbine.Count > 0)
            {
                <div class="card">
                    <div class="row">
                        <div class="col-md-8 cart">
                            <div class="title">
                                <div class="row">
                                    <div class="col" id="cok"><h4>Vaša korpa</h4></div>
                                    <div class="col align-self-center text-right text-muted">Imate @MojaKorpaNarudzbine.Count proizvoda u korpi</div>
                                </div>
                            </div>
                            <div class="row border-top border-bottom">
                                @if (MojaKorpaNarudzbine is not null)
                                {
                                    var lista = MojaKorpaNarudzbine.Skip(SkipVrednost).Take(TakeVrednost).ToList();
                                    <div class="row">
                                        <div class="row main align-items-center">
                                            <table class="table-stripped">
                                                @foreach (var proizvod in lista)
                                                {
                                                    <tbody>
                                                        <tr>
                                                            <td>
                                                                <img class="" src="@proizvod.Slika">
                                                            </td>
                                                            <td>
                                                                @proizvod.Naziv
                                                            </td>
                                                            <td id="kolicina">
                                                                <input type="number" min="1" class="form-control w-25" value="@proizvod.Kolicina" @onchange="@(e => UpravljajPromenom(e, proizvod))" />
                                                            </td>

                                                            <td>
                                                                @proizvod.Cena.ToString("#.##0,00 RSD")
                                                            </td>
                                                            <td>
                                                                <span class="close">
                                                                    <a id="changeCursor" @onclick="async () => await ObrisiProizvodIzKorpe(proizvod)">
                                                                        <i class="fa fa-trash text-danger"></i>
                                                                    </a>
                                                                </span>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                }

                                            </table>
                                        </div>
                                    </div>
                                }
                            </div>
                            <SfPager @ref="@stranica" PageSize="3" NumericItemsCount="4" TotalItemsCount="MojaKorpaNarudzbine!.Count" ItemClick="Klik" />

                            <div class="back-to-shop"><a href="/proizvodi">&leftarrow;<span class="text-muted">Nastavi sa kupovinom</span></a></div>


                        </div>
                        <div class="col-md-4 summary">
                            <div><h5><b>DETALJI</b></h5></div>
                            <hr>
                            <div class="row">
                                <div class="col" style="padding-left:0;">@MojaKorpaNarudzbine.Count PROIZVODA</div>
                                <div class="col text-right">@MojaKorpaNarudzbine.Sum(_ => _.UkupnaCena).ToString("#,##0.00 RSD")</div>
                            </div>
                            <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                                <div class="col">Ukupno za plaćanje</div>
                                <div class="col text-right">@MojaKorpaNarudzbine.Sum(_ => (_.UkupnaCena * 1.2m)).ToString("#,##0.00 RSD")</div>
                            </div>
                            <button class="btn" @onclick="Naplata">Nastavi sa plaćanjem</button>
                        </div>
                    </div>

                </div>


            }
            else
            {
                <div id="notfound">
                    <div class="notfound">
                        <div class="notfound-404">
                            <h1>404</h1>
                        </div>
                        <h2>Korpa je prazna</h2>
                        <p>Pogledajte sve naše proizvode</p>
                        <a href="/proizvodi">Vidi proizvode</a>
                    </div>
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <div id="notfound">
            <div class="notfound">
                <div class="notfound-404">
                    <h1>404</h1>
                </div>
                <h2>Niste prijavljeni</h2>
                <p>Morate biti prijavljeni da bi videli sadržaj korpe</p>
                <a href="/nalog/prijava">Prijava</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

<MessageDialog @ref="messageDialogService.messageDialog"></MessageDialog>

@code
{
    SfPager? stranica;
    public int SkipVrednost;
    public int TakeVrednost = 3;

    List<Narudzbina> MojaKorpaNarudzbine = new();

    protected async override Task OnInitializedAsync()
    {
        MojaKorpaNarudzbine = await korpaService.MojeNarudzbine();
        messageDialogService.Action += StateHasChanged;
    }

    async Task UpravljajPromenom(Microsoft.AspNetCore.Components.ChangeEventArgs e, Narudzbina narudzbina)
    {
        try
        {
            if (int.Parse(e.Value!.ToString()!) <= 0 || e.Value!.ToString()!.Equals("") || string.IsNullOrWhiteSpace(e.Value!.ToString())) return;

            var getNarudzbinu = MojaKorpaNarudzbine.FirstOrDefault(_ => _.Id == narudzbina.Id);
            getNarudzbinu!.Kolicina = int.Parse(e.Value!.ToString()!);

            // azuriranje kolicine
            PrikaziOdgovor(await korpaService.DodajUKorpu(new Proizvod()
                {
                    Id = narudzbina.Id
                }, getNarudzbinu.Kolicina));

        }
        catch { }
    }

    async Task ObrisiProizvodIzKorpe(Narudzbina proizvod)
    {
        bool potvrda = await js.InvokeAsync<bool>("potvrdaBrisanja");
        if (!potvrda) return;
        MojaKorpaNarudzbine.Remove(MojaKorpaNarudzbine.FirstOrDefault(_ => _.Id == proizvod.Id)!);
        PrikaziOdgovor(await korpaService.ObrisiProizvodIzKorpe(proizvod));

    }

    private void PrikaziOdgovor(ServiceResponse serviceResponse)
    {
        if (serviceResponse.Flag)
            messageDialogService.messageDialog!.SetDialogValues("success", serviceResponse.Poruka);

        else
            messageDialogService.messageDialog!.SetDialogValues("warning", serviceResponse.Poruka);

        messageDialogService.SetMessageDialog();
    }

    public void Klik(PagerItemClickEventArgs args)
    {
        SkipVrednost = (args.CurrentPage * stranica!.PageSize) - stranica.PageSize;
        TakeVrednost = stranica.PageSize;
    }

    async Task Naplata()
    {
        if (MojaKorpaNarudzbine is null)
            PrikaziOdgovor(new ServiceResponse(false, "Morate prvo dodati proizvod u korpu!"));

        var url = await naplataService.Racun(MojaKorpaNarudzbine!);
        NavManager.NavigateTo(url);
    }

    public void Dispose()
    {
        messageDialogService.Action -= StateHasChanged;
    }
}
