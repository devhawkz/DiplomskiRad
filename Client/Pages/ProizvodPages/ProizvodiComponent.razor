@page "/proizvodi"
@implements IDisposable;

@if(proizvodService.IsVisible)
{
    <LoadingPage />
}

else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2">
                <KategorijeComponent KategorijaKlikEvent="KategorijaKlikEvent" OsnovnaKategorijaKlikEvent="OsnovnaKategorijaKlik" />
            </div>
            <div class="col-lg-10">
               
                <div class="card border-0 mt-4">
                    <!--Prosledjujemo listu svih proizvoda komponenti ListaProizvodaComponent, koristi se desni izraz samo kada je levi izraz null (desni izraz = proizvodService.SviProizvodi )-->
                    <ListaProizvodaComponent SviProizvodi="proizvodService.ProizvodiIsteKategorije??proizvodService.SviProizvodi" />
                </div>
            </div>
            <div class="col-lg-12 mt-5">
                <div class="card border-0" style="position:absolute;left:1px;right:1px;">
                    <div class="card-header border-danger-subtle"> <RecommendedPageComponent /></div>
                </div>
            </div>
        </div>
    </div>
}


@code
{
    protected async override Task OnInitializedAsync()
    {
        await UcitajPodatke();
        proizvodService.ProizvodAction += StateHasChanged;
    }

    private async void KategorijaKlikEvent(int kategorijaId)
    {
        if (kategorijaId == 0) return;
        await proizvodService.GetProizvodeIsteKategorije(kategorijaId);
    }

    private async void OsnovnaKategorijaKlik()
    {
        proizvodService.ProizvodiIsteKategorije = null!;
       
        // uzima se lista sa servera, zato sto se ta lista moze cesto menjati i moze biti velika, te je bolje uzimati direktno sa servera, a ne iz memorije pregledaca -- detaljnije u svesci
        await UcitajPodatke();
    }

    async Task UcitajPodatke()
    {
        bool preporuceno = false;
        await proizvodService.GetProizvode(preporuceno);
    }

    public void Dispose()
    {
        proizvodService.ProizvodAction -= StateHasChanged;
    }
}