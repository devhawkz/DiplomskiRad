@implements IDisposable;

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12" id="kontejner">
            <div class="card">
                <div class="card-header" id="heder">Detalji proizvoda</div>
                   
                    <div class="d-flex justify-content-between">
                    <img src="@Proizvod!.Base64Img" width="150" height="250" />
                        <div class="card-body" id="telo">
                            <p>
                                <div class="vstack gap-2">
                                    <h3>@Proizvod.Naziv</h3>
                                    <div class="hstack gap-2">
                                        <span>Kategorija: </span>
                                        <span>
                                            @if(Proizvod is not null)
                                            {
                                                <span>@Proizvod.Kategorija!.Naziv</span>
                                            }
                                        </span>
                                    </div>
                                    <div class="hstack gap-2">
                                        <h5>Tehničke specifikacije</h5>
                                        <p>@Proizvod!.Opis</p>
                                    </div>
                                    <div class="hstack gap-2">
                                        <span>Cena:</span>
                                        <span class="text-danger">@Proizvod.Cena.ToString("#.## RSD")</span>
                                    </div>
                                </div>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="card-footer" id="futer">
                <button class="btn btn-info" id="dugme-crno" @onclick="KlikUnazad"><i class="fa fa-angle-left"></i>Nazad</button>
                    <button class="btn btn-danger" id="dugme-crveno" style="margin-left:20px;" @onclick="DodajUKorpu"><i class="fa fa-cart-shopping">Dodaj u korpu</i></button>
                </div>
            </div>
        </div>
    </div>

<MessageDialog @ref="messageDialogService.messageDialog" />
@code {
    [Parameter] public Proizvod Proizvod { get; set; }

    // obavestava parent komponentu cim se nesto desi u child komponenti
    [Parameter] public EventCallback HandleBackClickedEvent { get; set; }

    protected async override Task OnInitializedAsync()
    {
        messageDialogService.Action += StateHasChanged;
    }

    async Task KlikUnazad()
    {
        await HandleBackClickedEvent.InvokeAsync();
    }

    async Task DodajUKorpu()
    {
        if (Proizvod is null) return;
        PrikaziOdgovor(await korpaService.DodajUKorpu(Proizvod!));
    }

    private void PrikaziOdgovor(ServiceResponse serviceResponse)
    {
        if (serviceResponse.Flag)
            messageDialogService.messageDialog!.SetDialogValues("success", serviceResponse.Poruka);
        else
            messageDialogService.messageDialog!.SetDialogValues("warning", serviceResponse.Poruka);

        messageDialogService.SetMessageDialog();
    }

    public void Dispose()
    {
        messageDialogService.Action -= StateHasChanged;
    }
}
